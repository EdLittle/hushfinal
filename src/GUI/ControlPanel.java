
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ControlPanel.java
 *
 * Created on Jan 13, 2012, 2:28:57 AM
 */
package GUI;

import Controllers.GameManager;
import Controllers.RoutesManager;
import Controllers.ScoreManager;
import Controllers.SoundManager;
import java.awt.CardLayout;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.LinkedList;
import java.util.Queue;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.sound.sampled.LineUnavailableException;
import javax.sound.sampled.UnsupportedAudioFileException;
import javax.swing.Icon;

/**
 *
 * @author FREAK
 */
public class ControlPanel extends javax.swing.JPanel {
    private Hush hush;
    public SoundManager soundManager;
    public LoginPanel loginPanel;
    private CardLayout cardLayout;
    private Icon activeSoundIcon;
    private Icon muteSoundIcon;
    /** Creates new form ControlPanel */
    public ControlPanel() {
        activeSoundIcon = new javax.swing.ImageIcon(getClass().getResource("/med/MD-sound.png")); // NOI18N
        muteSoundIcon = new javax.swing.ImageIcon(getClass().getResource("/med/MD-volume-0.png")); // NOI18N
        initComponents();  
        
            System.out.println("created");  
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is  
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        restart = new javax.swing.JLabel();
        sounds = new javax.swing.JLabel();
        home = new javax.swing.JLabel();
        reset = new javax.swing.JLabel();

        setBorder(javax.swing.BorderFactory.createEtchedBorder());
        setToolTipText("ControlPanel");
        setMinimumSize(new java.awt.Dimension(500, 75));
        setPreferredSize(new java.awt.Dimension(500, 75));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        restart.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        restart.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        restart.setIcon(new javax.swing.ImageIcon(getClass().getResource("/med/options.png"))); // NOI18N
        restart.setToolTipText("Restart");
        restart.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        restart.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        restart.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        restart.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                restartMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                restartMouseEntered(evt);
            }
        });
        add(restart, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 0, -1, 50));

        sounds.setIcon(new javax.swing.ImageIcon(getClass().getResource("/med/MD-volume-0.png"))); // NOI18N
        sounds.setToolTipText("Mute");
        sounds.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        sounds.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                soundsMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                soundsMouseEntered(evt);
            }
        });
        add(sounds, new org.netbeans.lib.awtextra.AbsoluteConstraints(452, 0, -1, -1));

        home.setIcon(new javax.swing.ImageIcon(getClass().getResource("/med/home.png"))); // NOI18N
        home.setToolTipText("Home");
        home.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                homeMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                homeMouseEntered(evt);
            }
        });
        add(home, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 0, -1, -1));

        reset.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        reset.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        reset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/med/enter.png"))); // NOI18N
        reset.setToolTipText("Reset");
        reset.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        reset.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        reset.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        reset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resetMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                resetMouseEntered(evt);
            }
        });
        add(reset, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 50));
    }// </editor-fold>//GEN-END:initComponents

private void restartMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_restartMouseClicked
// TODO add your handling code here:
        System.out.println("Restart");       
        if (enableIcon(1)){
            newGame("loginCard");
        }
        else            
            System.out.println("Cannot Restart");  
        
        
        hush = Hush.getHush();                
        loginPanel = hush.getLoginPanel();
        loginPanel.jPanel8.add(this);
}//GEN-LAST:event_restartMouseClicked

    private void homeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeMouseClicked
        // TODO add your handling code here:
        System.out.println("Home"); 
        
        if (enableIcon(2)) {            
            hush = Hush.getHush();
            cardLayout = (CardLayout) hush.getCardLayout();        
            cardLayout.show(hush.getContentPane(), "titleCard");
            
            Hush.soundManager.playClickOff();
        }
        else {            
            newGame("titleCard"); 
        }    
    }//GEN-LAST:event_homeMouseClicked

    private void soundsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_soundsMouseClicked
            // TODO add your handling code here:
            if (Hush.soundManager.isActiveBgmusic()){
                System.out.println("Music off!"); 
                sounds.setIcon(muteSoundIcon); // NOI18N
                Hush.soundManager.stopBgmusic();
            }
            else{                
                System.out.println("Music on!");
                sounds.setIcon(activeSoundIcon); // NOI18N
                Hush.soundManager.playBgmusic();
            }
    }//GEN-LAST:event_soundsMouseClicked

    private void resetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resetMouseClicked
        // TODO add your handling code here:
        System.out.println("Reset");        
        if (enableIcon(1)){
            newGame("playCard");
            try {
                hush.getDecoyPlay().startGame();
            } catch (FileNotFoundException ex) {
                Logger.getLogger(ControlPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else            
            System.out.println("Cannot Reset");       
    }//GEN-LAST:event_resetMouseClicked

    private void resetMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resetMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_resetMouseEntered

    private void restartMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_restartMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_restartMouseEntered

    private void homeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_homeMouseEntered

    private void soundsMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_soundsMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_soundsMouseEntered
    
    public void setSoundsIcon(boolean active){
        
       System.out.println("-------------Active sounds: " + Hush.soundManager.isActiveBgmusic() + " current status: " + active);
         if (active){
                System.out.println("ACTIVE"); 
                sounds.setIcon(activeSoundIcon); // NOI18N
            }
            else{                
                System.out.println("MUTE");
                sounds.setIcon(muteSoundIcon); // NOI18N
            }
         //setSoundsIcon(Hush.soundManager.isActiveBgmusic())
    }   
    private void newGame(String cardName){     
        String bogusCardName = RoutesManager.pop();
        hush = Hush.getHush();
        hush.navigate(cardName);
        GameManager gameManager = hush.getDecoyPlay().getGameManager();
        gameManager.restartGame();
    }
    
    private boolean enableIcon(int state){     
        String cardName = RoutesManager.currState();
       
        //reset
        if ((state == 1)&&((cardName.equalsIgnoreCase("aboutCard")) || (cardName.equalsIgnoreCase("loginCard")) || (cardName.equalsIgnoreCase("hallCard")))) {
           return false;            
        }
        //home
        else  if ((state == 2)&&(cardName.equalsIgnoreCase("playCard")))
            return false;            
        else 
            return true;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel home;
    private javax.swing.JLabel reset;
    private javax.swing.JLabel restart;
    private javax.swing.JLabel sounds;
    // End of variables declaration//GEN-END:variables
}
